import pandas as pd
import numpy as np
import plotly.graph_objects as go
import plotly.express as px

import pandas as pd
from pyspark.sql import SparkSession
from pyspark.sql import functions as F
from pyspark.sql.types import StringType, IntegerType
from pyspark.sql.functions import to_date, substring, desc, asc
from pyspark.sql.functions import min, max ,sum,col, lit,round, dayofweek,year, weekofyear, dayofweek,month, quarter
from pyspark.sql import SparkSession
from pyspark.sql.window import Window

df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv')
spark_df = spark.createDataFrame(df)
df.head()
spark_df = spark_df \
.withColumn("Date",to_date(spark_df["Date"], "yyyy-MM-dd"))\
.withColumn("year", year("Date"))\
.withColumn("week_number", weekofyear("Date"))\
.withColumn("day_of_week", dayofweek("Date"))\

spark_df = spark_df.toPandas()  # Convertir le DataFrame Spark en DataFrame Pandas
spark_df = spark_df.rename(columns={
    "AAPL.Adjusted": "AAPLAdjusted",
    "AAPL.Close": "AAPLClose",
    "AAPL.High": "AAPLHigh",
    "AAPL.Low": "AAPLLow",
    "AAPL.Open": "AAPLOpen",
    "AAPL.Volume": "AAPLVolume",
    "Date": "Date",
    "day_of_week": "day_of_week",
    "direction": "direction",
    "dn": "dn",
    "mavg": "mavg",
    "up": "up",
    "week_number": "week_number",
    "year": "year"
})


spark_df = spark.createDataFrame(spark_df)
print(spark_df)
month2 = [1, 12]
#spark_df= spark_df.groupBy(dayofweek("Date")).count()
spark_df =spark_df.filter(month("Date").isin(month2))
spark_df = spark_df.groupBy(quarter("date"),year("date")).agg(sum("AAPLOpen").alias("AAPLOpen"), min("AAPLHigh").alias("min_AAPLHigh"))
display(spark_df)
